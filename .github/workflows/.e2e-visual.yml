name: .E2E Visual
env:
  deployment_name: pay-transparency
on:
  workflow_dispatch:
    inputs:
      frontend-url:
        description: "Frontend URL of the application"
        required: true
        type: string
      external-api-base-url :
        description: "Base URL to the external service API"
        required: true
        type: string
      environment:
        description: "Environment to read secrets from GitHub secrets"
        required: false
        default: dev
        type: string
      timeout-minutes:
        description: 'Timeout minutes'
        default: 12
        required: false
        type: number
  workflow_call:
    secrets:
      E2E_USERNAME:
        required: true
      E2E_PASSWORD:
        required: true
      EXTERNAL_CONSUMER_DELETE_REPORTS_API_KEY:
        required: true
    inputs:
      frontend-url:
        description: "Frontend URL of the application"
        required: true
        type: string
      environment:
        description: "Environment to read secrets from GitHub secrets"
        required: false
        default: dev
        type: string
      external-api-base-url :
        description: "Base URL to the external service API"
        required: true
        type: string
      timeout-minutes:
        description: 'Timeout minutes'
        default: 12
        required: false
        type: number

jobs:
  end-to-end-visual:
    name: Visual Regression Tests
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-24.04
    timeout-minutes: ${{ fromJson(inputs.timeout-minutes) }}
    strategy:
      fail-fast: false  # Don't fail fast - we need all browsers to generate screenshots
      max-parallel: 1   # Run all browsers in parallel for faster screenshot generation
      matrix:
        project: [chrome-visual, firefox-visual, safari-visual, edge-visual]
    steps:
      - uses: actions/checkout@v5
        name: Checkout
      - uses: actions/setup-node@v4
        name: Setup Node
        with:
          node-version: 22
      
      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Run Visual Regression Tests
        id: playwright-visual-tests
        env:
          E2E_BASE_URL: ${{ inputs.frontend-url }}
          E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
          EXTERNAL_CONSUMER_DELETE_REPORTS_API_KEY: ${{ secrets.EXTERNAL_CONSUMER_DELETE_REPORTS_API_KEY }}
          EXTERNAL_API_BASE_URL: ${{ inputs.external-api-base-url }}
        run: |
          npx playwright test --project="${{ matrix.project }}"
        continue-on-error: true

      - name: Check for visual regression issues
        if: ${{ always() }}
        id: check-visual-regression
        run: |
          if [ -f "./test-results.json" ]; then
            if grep -q -e "Error: A snapshot doesn't exist at" -e "Screenshot comparison failed" "./test-results.json"; then
              echo "has_visual_issues=true" >> $GITHUB_OUTPUT
              if [ -d "./test-results" ]; then
                mv ./test-results ./test-results-diffs
              fi
              if [ -d "./playwright-report" ]; then
                mv ./playwright-report ./playwright-report-diffs
              fi
            else
              echo "has_visual_issues=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "has_visual_issues=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate updated screenshots
        if: ${{ always() && steps.check-visual-regression.outputs.has_visual_issues == 'true' }}
        id: generate-updated-screenshots
        env:
          E2E_BASE_URL: ${{ inputs.frontend-url }}
          E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
          EXTERNAL_CONSUMER_DELETE_REPORTS_API_KEY: ${{ secrets.EXTERNAL_CONSUMER_DELETE_REPORTS_API_KEY }}
          EXTERNAL_API_BASE_URL: ${{ inputs.external-api-base-url }}
        run: |
          echo "::notice::Generating updated screenshots for comparison..."
          npx playwright test --update-snapshots --project="${{ matrix.project }}"

      - uses: actions/upload-artifact@v4
        if: always()
        name: Upload Playwright visual test artifacts with screenshots
        with:
          name: playwright-visual-report-${{ matrix.project }}
          path: |
            ./frontend/playwright-report-diffs
            ./frontend/test-results-diffs
            ./frontend/test-results.json
            ./frontend/e2e/snapshots.ci/**/*${{ matrix.project }}*
          retention-days: 7

      - name: Review and Commit Approved Screenshots
        if: ${{ steps.check-visual-regression.outputs.has_visual_issues == 'true' }}
        run: |
          echo "::error::Visual regression differences were detected."
          echo "::notice::Download the artifacts for each browser (this one is 'playwright-visual-report-${{ matrix.project }}')."
          echo "::notice::Review the new screenshots in test-results-diffs."
          echo "::notice::Manually copy and commit the screenshots you approve from 'e2e/snapshots.ci/' to the repository."
          exit 1
